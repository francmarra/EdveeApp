// <auto-generated />
using Edveeeeeee.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Edveeeeeee.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250521140117_RemoveRegimeFromUC")]
    partial class RemoveRegimeFromUC
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Edveeeeeee.Models.Atividade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeCurricularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeCurricularId");

                    b.ToTable("Atividades");
                });

            modelBuilder.Entity("Edveeeeeee.Models.Avaliacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeCurricularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeCurricularId");

                    b.ToTable("Avaliacoes");
                });

            modelBuilder.Entity("Edveeeeeee.Models.Competencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeCurricularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeCurricularId");

                    b.ToTable("Competencias");
                });

            modelBuilder.Entity("Edveeeeeee.Models.Conteudo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Texto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeCurricularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeCurricularId");

                    b.ToTable("Conteudos");
                });

            modelBuilder.Entity("Edveeeeeee.Models.LigacaoEdVee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<string>("DestinoTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrigemId")
                        .HasColumnType("int");

                    b.Property<string>("OrigemTipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeCurricularId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeCurricularId");

                    b.ToTable("Ligacoes");
                });

            modelBuilder.Entity("Edveeeeeee.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("Edveeeeeee.Models.UnidadeCurricular", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Turmas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("UCs");
                });

            modelBuilder.Entity("Edveeeeeee.Models.Atividade", b =>
                {
                    b.HasOne("Edveeeeeee.Models.UnidadeCurricular", "UnidadeCurricular")
                        .WithMany("Atividades")
                        .HasForeignKey("UnidadeCurricularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeCurricular");
                });

            modelBuilder.Entity("Edveeeeeee.Models.Avaliacao", b =>
                {
                    b.HasOne("Edveeeeeee.Models.UnidadeCurricular", "UnidadeCurricular")
                        .WithMany("Avaliacao")
                        .HasForeignKey("UnidadeCurricularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeCurricular");
                });

            modelBuilder.Entity("Edveeeeeee.Models.Competencia", b =>
                {
                    b.HasOne("Edveeeeeee.Models.UnidadeCurricular", "UnidadeCurricular")
                        .WithMany("Competencias")
                        .HasForeignKey("UnidadeCurricularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeCurricular");
                });

            modelBuilder.Entity("Edveeeeeee.Models.Conteudo", b =>
                {
                    b.HasOne("Edveeeeeee.Models.UnidadeCurricular", "UnidadeCurricular")
                        .WithMany("Conteudos")
                        .HasForeignKey("UnidadeCurricularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeCurricular");
                });

            modelBuilder.Entity("Edveeeeeee.Models.LigacaoEdVee", b =>
                {
                    b.HasOne("Edveeeeeee.Models.UnidadeCurricular", "UnidadeCurricular")
                        .WithMany()
                        .HasForeignKey("UnidadeCurricularId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UnidadeCurricular");
                });

            modelBuilder.Entity("Edveeeeeee.Models.UnidadeCurricular", b =>
                {
                    b.HasOne("Edveeeeeee.Models.Professor", null)
                        .WithMany("UCs")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Edveeeeeee.Models.Professor", b =>
                {
                    b.Navigation("UCs");
                });

            modelBuilder.Entity("Edveeeeeee.Models.UnidadeCurricular", b =>
                {
                    b.Navigation("Atividades");

                    b.Navigation("Avaliacao");

                    b.Navigation("Competencias");

                    b.Navigation("Conteudos");
                });
#pragma warning restore 612, 618
        }
    }
}
